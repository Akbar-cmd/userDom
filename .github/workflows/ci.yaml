name: CI

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

env:
  IMAGE_NAME_HTTP: "akbae/ci-http"  # Ваше имя образа в Docker Hub
  REGISTRY: "docker.io"    # Реестр Docker Hub
  COMPOSE_PROJECT_NAME: "ci-app-http"  # Имя проекта Docker Compose
  SSH_DIR: "~/ci-app"      # Директория на сервере

jobs:
  image-build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Registry
        uses: docker/login-action@v2
        with:
            username: ${{ secrets.REGISTRY_USERNAME }}
            password: ${{ secrets.REGISTRY_PASSWORD }}
            registry: ${{ env.REGISTRY }}

      - name: Build and Push Docker Image
        run: |
          TAG_NAME=$(echo $GITHUB_SHA | head -c7)
          docker buildx create --use
          docker buildx build --no-cache --push --tag $REGISTRY/$IMAGE_NAME_HTTP:$TAG_NAME -f Dockerfile .
          
      

  deploy-image:
    runs-on: ubuntu-latest
    needs: image-build-and-push


    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Copy docker-compose to server
        uses: appleboy/scp-action@v0.1.0
        with:
            host: ${{ secrets.SERVER_HOST }}
            username: ${{ secrets.SSH_USERNAME }}
            key: ${{ secrets.SSHKEY }}
            source: "docker-compose.yml"
            target: "~/ci-app/"

      - name: Copy configs to server
        uses: appleboy/scp-action@v0.1.0
        with:
            host: ${{ secrets.SERVER_HOST }}
            username: ${{ secrets.SSH_USERNAME }}
            key: ${{ secrets.SSHKEY }}
            source: "*.yml"  # Копирует все yaml-файлы
            target: ${{ env.SSH_DIR }}

      - name: Deploy to Selectel Cloud via SSH action
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSHKEY }}
          envs: IMAGE_NAME_HTTP,REGISTRY,GITHUB_SHA,CONTAINER_NAME
          script: |
            cd ${{ env.SSH_DIR }}
            TAG_NAME=$(echo $GITHUB_SHA | head -c7)
            
            # Обновляем образ в docker-compose.yml
            sed -i "s|image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_HTTP }}:.*|image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_HTTP }}:$TAG_NAME|g" docker-compose.yml
            
            # Создаем сеть 
            docker network create grpc-network >/dev/null 2>&1 || docker network create grpc-network
            
            # Login into Selectel Registry
            docker login -u ${{ secrets.REGISTRY_USERNAME }} -p ${{ secrets.REGISTRY_PASSWORD }} ${{ env.REGISTRY }}
            
            # Получаем новые образы и перезапускаем сервисы
            docker compose --project-name ${{ env.COMPOSE_PROJECT_NAME }} down http-server
            docker compose --project-name ${{ env.COMPOSE_PROJECT_NAME }} pull http-server
            docker compose --project-name ${{ env.COMPOSE_PROJECT_NAME }} up -d --build http-server
            
            # Проверяем статус
            sleep 10
            docker compose --project-name ${{ env.COMPOSE_PROJECT_NAME }} ps
            
